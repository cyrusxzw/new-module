@import 'styles/index';

:root {
  /* Represents final menu height of nav container 
  ** Mobile height set by Header component of Padding 20 20 20 20 & Height: 50px
  */
  --menu-height: 90px;
}

.presentationalWrapper {
  height: 80px;
}

.base {
  position: relative;
  z-index: var(--z-index-menu);
  width: 100%;
  opacity: 0;
  overflow-x: hidden;
  overflow-y: hidden;
  transition: background-color 200ms var(--easing-ease-in-out-cubic),
    opacity 200ms var(--easing-ease-in-out-cubic);

  /* Added to more elegantly transition between breakpoints */
  @media (--viewport-xs-sm-only) {
    opacity: 1;
  }

  &.isVisibleStickyNav,
  &.isInvisibleStickyNav {
    position: fixed;
    height: var(--menu-height);
    transition: top 300ms var(--easing-ease-in-out-cubic);
    &.dark {
      background-color: var(--color-primary);
    }

    &.light {
      background-color: var(--color-secondary);
    }
  }

  &.isVisibleStickyNav {
    top: 0;
    outline: 1px solid var(--color-grey-rgba-20);
  }

  &.isInvisibleStickyNav {
    top: calc(0 - var(--menu-height));
  }

  &.open {
    position: fixed;
    z-index: var(--z-index-fixed-menu);
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    min-height: 100vh;
    overflow-y: auto;

    &.dark {
      background-color: var(--color-primary);
    }

    &.light {
      background-color: var(--color-secondary);
    }
  }

  &,
  & * {
    box-sizing: border-box;
  }
}

.main {
  position: relative;
  z-index: var(--z-index-fixed-menu);
  height: 100%;
  pointer-events: none;

  &.open {
    pointer-events: auto;
  }
}

.list {
  padding-left: 0;
  margin-top: 0;
  margin-bottom: 0;
  list-style: none;
}

.sublist {
  .dark & {
    background-color: var(--color-primary);
  }

  .light & {
    background-color: var(--color-secondary);
  }
}

.listItem {
  margin-top: 0;
  margin-bottom: 0;

  .dark & {
    border-top: 1px solid var(--color-grey-rgba-20);
  }

  .light & {
    border-top: 1px solid var(--color-white);
  }

  .dark &:last-child {
    border-bottom: 1px solid var(--color-grey-rgba-20);
  }

  .light &:last-child {
    border-bottom: 1px solid var(--color-white);
  }
}

.nestedItem {
  padding-bottom: 0;
}

.nestedCollectionLink.nestedCollectionLink:last-child {
  border-bottom: none;
}

.ornamentalHover {
  @extend %ornamentalHover;
}

.ornamentalHover::after {
  @extend %ornamentalHoverAfter;
}

.dark .ornamentalHover::after {
  @extend %ornamentalHoverDarkTheme;
}

.light .ornamentalHover::after {
  @extend %ornamentalHoverLightTheme;
}

.ornamentalWrapper:hover {
  .ornamentalHover::after {
    width: 100%;
  }
}

.itemElement {
  position: relative;
  display: flex;
  width: calc(100% - 10px);
  align-items: center;
  justify-content: space-between;
  padding-top: 10px;
  padding-right: 15px;
  padding-bottom: 10px;
  padding-left: 15px;
  margin-right: 5px;
  margin-left: 5px;
  font-family: var(--font-family-sans-serif-regular);
  font-size: rem(18px);
  line-height: 1.4;
  outline-offset: 0;
  text-align: left;
  transition: outline-offset 200ms var(--easing-ease-out-cubic),
    color 200ms var(--easing-ease-out-cubic);

  polygon {
    transition: fill 200ms var(--easing-ease-out-cubic);
  }

  .dark & {
    color: var(--color-secondary);
  }

  .light & {
    color: var(--color-primary);
  }

  &:hover {
    .dark & {
      color: var(--color-black);
    }

    .light & {
      color: var(--color-white);
    }

    .dark & polygon {
      fill: var(--color-black);
    }

    .light & polygon {
      fill: var(--color-white);
    }
  }

  .dark &:focus-visible {
    outline: 1px dashed var(--color-dark-decoration);
    outline-offset: 2px;
  }

  .light &:focus-visible {
    outline: 1px dashed var(--color-light-decoration);
    outline-offset: 2px;
  }
}

.slide {
  position: absolute;
  z-index: 1;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.absoluteBuffer {
  position: absolute;
  top: 0;
  width: 100%;
  height: var(--menu-height);
  pointer-events: none;
  visibility: hidden;
}
